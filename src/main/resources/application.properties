# Application
spring.application.name=nexgate-notification-server
server.port=8766

# Docker Compose Support
spring.docker.compose.enabled=true
spring.docker.compose.file=docker-compose.yml

# Database Configuration (will be read from Vault: secret/nexgate/database)
spring.datasource.url=${database.url}
spring.datasource.username=${database.username}
spring.datasource.password=${database.password}

# JPA Configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true



# RabbitMQ (connects to docker rabbitmq)
spring.rabbitmq.host=${rabbitmq.host}
spring.rabbitmq.port=${rabbitmq.port}
spring.rabbitmq.username=${rabbitmq.username}
spring.rabbitmq.password=${rabbitmq.password}

# Redis (connects to docker redis)
spring.data.redis.host=${redis.host}
spring.data.redis.port=${redis.port}


# GlueEmail SMTP Configuration
spring.mail.host=${email.host}
spring.mail.port=587
spring.mail.username=${email.username}
spring.mail.password=${email.password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# Batch Processing
notification.batch.size=15
notification.batch.parallel-threads=5


# SMS Provider Configuration
sms.sender-id=${textfy.sender.id}

# Textfy SMS Configuration (textify.africa)
sms.textfy.enabled=${textfy.enabled}
sms.textfy.api-url=${textfy.api-url}
sms.textfy.api-key=${textfy.key}
sms.textfy.sender-name=${textfy.sender.id}
sms.textfy.batch-size=100


# Push Notification Provider Configuration
# Gotify Push Configuration
push.gotify.enabled=${gotify.enabled}
push.gotify.url=${gotify.url}
push.gotify.token=${gotify.token}
